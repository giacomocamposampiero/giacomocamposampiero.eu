{
    "componentChunkName": "component---src-pages-projects-mdx-slug-js",
    "path": "/projects/nlpropaganda/",
    "result": {"data":{"mdx":{"frontmatter":{"title":"nlpropaganda","date":"February 19, 2022","outline":"A tool for automatic detection and classification of propaganda in news articles.","link":"","repo":"https://github.com/andreakiro/nlpropaganda","lang":"allennlp"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"nlpropaganda\",\n  \"date\": \"2022-02-19\",\n  \"type\": \"project\",\n  \"category\": \"personal\",\n  \"outline\": \"A tool for automatic detection and classification of propaganda in news articles.\",\n  \"link\": \"\",\n  \"repo\": \"https://github.com/andreakiro/nlpropaganda\",\n  \"lang\": \"allennlp\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"nlpropaganda\"), \" was developed, together with two other students, as course project for the Natural Language Processing course at ETHZ.\"), mdx(\"p\", null, \"This work represents our contribution to the SemEval-2020 Task 11 (\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://propaganda.qcri.org/semeval2020-task11/index.html#task\"\n  }, \"link\"), \"),\\na shared task whose aim was to close the gap between whole-document classification and fine-grained text analysis in the literature.\"), mdx(\"p\", null, \"The project was intended to be a \\\"research-like\\\" project, and therefore we investigated a novel approach to the task.\\nIn fact, the classification subtask of the shared task was intended to work with \\\"ideal\\\" spans, i.e. text snippets that were for sure propagandistic arguments, clearly a bold assumption that is almost impossible to be true in a real-life scenario.\\nBecause of this, we tried to develop a more \\\"general\\\" version of the system, where the classification was perfomed on top of the actual results of the propaganda identificator.\"), mdx(\"p\", null, \"Key ingredients used in this project:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"fine-tuned language models like BERT, RoBERTa and XLNet for text embedding\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"feed-forward net for both identification and classification of spans\")), mdx(\"p\", null, \"Results obtained for the propaganda identification task were very interesting, placing our group 8th in the permanent leaderboard with an F1-score of 0.46072.\\nClassification results are still not definitive, as we're currently working on the improvement of the model!\"), mdx(\"p\", null, \"The final report for the project can be found \", mdx(\"a\", {\n    href: \"/nlpropaganda-paper.pdf\"\n  }, \"here\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"afa511f5-9752-5a52-951d-8603a6cd96dc","slug":"nlpropaganda","__params":{"slug":"nlpropaganda"}}},
    "staticQueryHashes": []}